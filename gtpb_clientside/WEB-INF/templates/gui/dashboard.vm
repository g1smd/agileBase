<html>
<head>
	<title>Utilisation information</title>
	<link type="text/css" rel="stylesheet" href="resources/display_application.css" />
	<link type="text/css" rel="stylesheet" href="styles/main.css" />
	<link type="image/x-icon" rel="icon" href="resources/icons/gtpb.ico" /> <!-- favicon -->
	<script type="text/javascript" src="resources/jquery.js"></script>
	<script type="text/javascript" src="resources/jit.js"></script>
	<script type="text/javascript" src="simple/simple.js"></script>
</head>

<body>
#set($treeMapJSON = $view.getUsageStats().getTreeMapJSON())
JSON is<br>
$treemapJSON<p>

#if($treeMapJSON.startsWith("{")) ##if valid JSON
<script type="text/javascript">

var tipCache = [];

jQuery(document).ready(function(){
	//Maximize window
	if (window.screen) {
		window.moveTo(0,0);
		window.outerHeight = screen.availHeight;
		window.outerWidth = screen.availWidth;
	}
	displayTreemap();
	// Our customisation to make it look more as we want it
	growLeaves();
});

jQuery(window).bind("resize", function(e) {
	displayTreemap();
	// Our customisation to make it look more as we want it
	growLeaves();
});

function displayTreemap() {
	// fit treemap to window
	jqInfovis = jQuery("#infovis");
	ivWidth = jQuery("#dashboard").css("width");
	if (ivWidth) {
	  ivWidth = ivWidth.substring(0,ivWidth.length - 2);
	  ivWidthInt = parseInt(ivWidth); // -15;
	  ivWidth = ivWidthInt + "px";
	  jqInfovis.css("width",ivWidth);
	  ivHeight = jQuery("#dashboard").css("height");
	  ivHeight = ivHeight.substring(0,ivHeight.length - 2);
	  ivHeightInt = parseInt(ivHeight); // -30;
	  ivHeight = ivHeightInt + "px";
	  jqInfovis.css("height",ivHeight);
	}

    var json = $treeMapJSON;
	\$jit.TM.Squarified.implement({
    'onLeftClick': function(elem) {
        var internalReportName = jQuery(elem).parent().attr("id");
		// if a report node
		if (internalReportName.substring(0,2) == "r_") {
			// close treemap and load that report
			internalReportName = internalReportName.substring(2);
			if (opener) {
			  var url = "AppController.servlet?return=gui/reports_and_tables/report_data";
			  url = url + "&set_report=" + internalReportName;
			  url = url + "&set_report_row_limit=100";
			  opener.oViewPane.pane_2.location = url;
			  window.close();
			} else {
			  var url = "AppController.servlet?return=gui/display_application";
			  url = url + "&set_report=" + internalReportName;
			  url = url + "&set_report_row_limit=100";
			  document.location = url;
			}
		} else if (internalReportName.substring(0,9) == "nopriv_r_") {
			alert("You don't currently have privileges to view this data");
		} else {
			this.enter(elem);
			growLeaves();
		}
    },
	'onRightClick': function(elem) {
		this.out(elem);
		growLeaves();
	}
	});

    var tm = new \$jit.TM.Squarified({
                //Where to inject the Treemap
                rootId: 'infovis',
				offset: 2,
				selectPathOnHover: true,
				addLeftClickHandler: true,
				addRightClickHandler: true,
				Color: {
        			//Allow coloring
        			allow: true,
        			//Select a value range for the $color
    			    //property. Defaults to -100 and 100.
     			    minValue: -750,
     			    maxValue: 750,
        			//Set color range. Defaults to reddish and
        			//greenish. It takes an array of three
        			//integers as R, G and B values.
        			//maxColorValue: [0, 255, 50],
        			maxColorValue: [255, 50, 50],
					minColorValue: [50, 150, 255]
     			},
				Tips: {
       				allow: true,
       				//add positioning offsets
       				offsetX: 20,
       				offsetY: 20,
       				//implement the onShow method to
       				//add content to the tooltip when a node
       				//is hovered
       				onShow: function(tip, node, isLeaf, domElement) {
						if (isLeaf) {
							var jqTip = jQuery(tip);
							top.innerHTML = node.name;
							var internalReportName = jQuery(domElement).parent().attr("id");
							if (internalReportName.substring(0,9) == "nopriv_r_") {
								tip.innerHTML = "You don't have privileges set to be able to view " + node.name;
							} else {
								internalReportName = internalReportName.substring(2);
								if (tipCache[internalReportName]) {
									jqTip.html(tipCache[internalReportName]);
								} else {
									tipParams = {
										"return": "gui/resources/report_view_stats",
										"set_custom_report": "true",
										"reportkey": "dashboard_report",
										"custominternalreportname": internalReportName
									}
									// save results to cache
           							jqTip.load("AppController.servlet", tipParams, function() {
									tipCache[internalReportName] = jqTip.html();
									});
									jqTip.fadeIn("normal");
								}
							}
						} else {
							tip.innerHTML = node.name + " module";
						}
       				}
				}
             });
    tm.loadJSON(json);
}

	// 'grow' leaves to remove the gaps between them and make groups of leaves look more contiguous
function growLeaves() {
	// only grow leaves when viewing the entire treemap
	if (jQuery("#root").length == 0) {
	  return;
	}
	jQuery(".leaf").each(function(i) {
	  var jqLeaf = jQuery(this);
	  var width = jqLeaf.css("width");
	  if(!width) {
	    return;
	  }
	  width = width.substring(0,width.length - 2)
	  widthInt = parseInt(width) + 2;
	  width = widthInt + "px";
	  var height = jqLeaf.css("height");
	  height = height.substring(0,height.length - 2)
	  heightInt = parseInt(height) + 2;
	  height = heightInt + "px";
	  var top = jqLeaf.css("top");
	  top = top.substring(0,top.length - 2)
	  top = parseInt(top) -1;
	  top = top + "px";
	  var left = jqLeaf.css("left");
	  left = left.substring(0,left.length - 2)
	  left = parseInt(left) -1;
	  left = left + "px";
	  jqLeaf.css("width",width);
	  jqLeaf.css("height",height);
	  jqLeaf.css("top",top);
	  jqLeaf.css("left",left);
	  if((widthInt * heightInt) > 2500) {
	  	jqLeaf.css("font-size","8pt");
	  }
	});
}
</script>

<div id="dashboard">
<div id="infovis" />
</div>
#else ##not valid JSON
<div class="warningmessage">
	<b>Stats not available:</b><p>
	$treeMapJSON
</div>
#end
</body>
</html>
