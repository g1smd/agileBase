##
##  Copyright 2013 GT webMarque Ltd
## 
##  This file is part of agileBase.
##
##  agileBase is free software: you can redistribute it and/or modify
##  it under the terms of the GNU General Public License as published by
##  the Free Software Foundation, either version 3 of the License, or
##  (at your option) any later version.
##  agileBase is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.
##
##  You should have received a copy of the GNU General Public License
##  along with agileBase.  If not, see <http://www.gnu.org/licenses/>.
##
## This template displays a single chart. It expects these variables to be defined:
## - $report
## - $chart
## - $chartRows
#set($mathTool = $viewTools.getMathTool())
#set($Integer = 0)
#set($chart_id = "chart_$chart.getId()")
#set($aggregateFunctions = $chart.getAggregateFunctions())
#if($chart.equals($report.getChart()))
  #set($chart_classes="default_chart")
#else
  #set($chart_classes="summary_chart")
#end
<div id="$chart_id" class="$chart_classes"></div>
## Work out if we can display data as a time series
#set($dateAxis = $chart.isTimeSeries())
#set($groupings = $chart.getGroupings())
#if($chartRows.size() == 1)
  #set($dateAxis = false)
#end
#if($dateAxis)
  #set($columnDisplay = false)
  #if(($chartRows.size() * $aggregateFunctions.size()) < 11)
    #set($columnDisplay = true)
  #end
  ## Work out date format for tooltip
  #set($numDateFields = 1)
  #set($dateFormat = "%Y")
  #foreach($grouping in $groupings)
	#set($groupingModifier = $grouping.getGroupingModifier())
	#if($groupingModifier == "DATE_QUARTER")
	  #if($numDateFields < 2) #set($numDateFields = 2) #end
	#elseif($groupingModifier == "DATE_MONTH")
	  #if($numDateFields < 2) #set($numDateFields = 2) #end
	#elseif($groupingModifier == "DATE_DAY")
	  #if($numDateFields < 3) #set($numDateFields = 3) #end
	#end
  #end
  #if($numDateFields == 2)
	#set($dateFormat = "%B %Y")
  #elseif($numDateFields == 3)
	#set($dateFormat = "%a, %e %b %Y")
  #end
#end
## Work out if we can display data as a pie chart
#set($pieChart = false)
#if((!$dateAxis) && ($chartRows.size() > 1) && ($chartRows.size() < 5) && ($aggregateFunctions.size() == 1))
  #set($pieChart = true)
#end
#if($chartRows.size() > 0)
#if(((!$dateAxis) || $columnDisplay) && (!$pieChart))
  ## we need to create category labels
  #set($xAxisCategories = [])
  #set($maxXAxisChars = 5)
  #foreach($summaryRow in $chartRows)
    #set($xAxisCategory = "")
    #foreach($grouping in $groupings) 
	  #if($grouping.equals($groupings.first()))
	    #set($xAxisCategory = $summaryRow.getGroupingValue($grouping))
	  #else
		#set($xAxisCategoryAddition = "$summaryRow.getGroupingValue($grouping)")
	    #set($xAxisCategory = "$xAxisCategory | $xAxisCategoryAddition")
	  #end
    #end
    #if($maxXAxisChars < $xAxisCategory.length())
	  #set($maxXAxisChars = $xAxisCategory.length())
    #end
    #set($success = $xAxisCategories.add("'$viewTools.escape($xAxisCategory)'"))
  #end ## end each summary row
#end ## end if not date axis
#set($series = [])
#set($seriesString = "")
#foreach($aggregateFunction in $aggregateFunctions)
  #set($seriesName = $viewTools.escape("$aggregateFunction").toLowerCase())
  ## Add grand total to series
  #if(($aggregateFunction.getAggregateFunction() == "SUM") || ($aggregateFunction.isCountFunction()))
	#set($grandTotal = "$mathTool.roundTo(2,$chartData.getGrandTotal($aggregateFunction))")
	#if($grandTotal.endsWith(".00"))
	  #set($endPos = $grandTotal.length() - 3)
	  #set($grandTotal = $grandTotal.substring(0, $endPos))
	#elseif($grandTotal.endsWith(".0"))
	  #set($endPos = $grandTotal.length() - 2)
	  #set($grandTotal = $grandTotal.substring(0, $endPos))
	#end
	#set($seriesName = "$seriesName = $grandTotal")
  #end
  #set($seriesString = "$seriesString { name:'$seriesName', data: ")
  #set($seriesData = [])
  #if($dateAxis) ## Time series chart
    #set($scatter = false)
    #set($oldDistance = false)
    #set($oldCalendar = false)
    #foreach($summaryRow in $chartRows)
  	  #set($day = 1)
  	  #set($month = 1)
  	  #set($year = 0)
  	  #set($point = [])
  	  #foreach($grouping in $groupings)
    		#set($groupingModifier = $grouping.getGroupingModifier())
    		#if($groupingModifier == "DATE_YEAR")
    		  #set($year = $summaryRow.getGroupingValue($grouping))
    		#elseif($groupingModifier == "DATE_QUARTER")
    		  #set($quarter = $summaryRow.getGroupingValue($grouping))
    		  #set($month = ($mathTool.toInteger($quarter) - 1) * 3) ## Approximate quartering of a year
    		#elseif($groupingModifier == "DATE_MONTH")
    		  #set($month = $mathTool.toInteger($summaryRow.getGroupingValue($grouping)) - 1)
    		#elseif($groupingModifier == "DATE_DAY")
    		  #set($day = $summaryRow.getGroupingValue($grouping))
    		#else
    		  $viewTools.log("Error: unrecognised grouping modifier $groupingModifier for date axis $grouping in summary $summaryReport")
    		#end
  	  #end
  	  ## Don't add null grouping
  	  ## NB on some graphs, the null grouping can have the largest value
  	  #if(($year != "") && ($month != ""))
  	    #set($success = $point.add("Date.UTC($year,$month,$day)"))
  		#set($success = $point.add($summaryRow.getAggregateValue($aggregateFunction)))
  	    #set($success = $seriesData.add($point))
        #set($calendar = $viewTools.getCalendar())
        #set($temp = $calendar.clear())
        #set($temp = $calendar.set($Integer.parseInt("$year"), $Integer.parseInt("$month"), $Integer.parseInt("$day")))
        #if((!$scatter) && $oldCalendar)
          #set($distance = $calendar.getTimeInMillis() - $oldCalendar.getTimeInMillis())
          #if($oldDistance)
            #set($difference = $distance - $oldDistance)
            #set($difference = $mathTool.abs($difference))
            #if($numDateFields == 1) ## Graph by years
              #if($difference > 2592000000) ## and more than a month or so
                #set($scatter = true)
              #end
            #elseif($numDateFields == 2) ## Months
              #if($difference > 345600000) ## and more than a few days
                #set($scatter = true)
              #end
            #elseif($difference > 7200000) ## Days and more than a few hours
              #set($scatter = true)
            #end
          #end
          #set($oldDistance = $distance)
        #end
        #set($oldCalendar = $calendar)
  	  #end
    #end ## end each row
  #elseif($pieChart)
	#set($maxLegendChars = 5)
    #foreach($summaryRow in $chartRows)
	  #set($point = [])
	  #set($wedgeName = "")
	  #foreach($grouping in $groupings)
		#if($foreach.count == 1)
		  #set($wedgeName = "$summaryRow.getGroupingValue($grouping)")
		#else
		  #set($wedgeName = "$wedgeName | $summaryRow.getGroupingValue($grouping)")
		#end
	  #end
	  #if($wedgeName.length() > $maxLegendChars)
	    #set($maxLegendChars = $wedgeName.length())
      #end
	  #set($success = $point.add("'$viewTools.escape($wedgeName)'"))
	  #set($success = $point.add($summaryRow.getAggregateValue($aggregateFunction)))
	  #set($success = $seriesData.add($point))
    #end
  #else ## Column / bar chart
    #foreach($summaryRow in $chartRows)
	  #set($success = $seriesData.add($summaryRow.getAggregateValue($aggregateFunction)))
    #end
  #end
  #set($seriesString = "$seriesString $seriesData }")
  #if($foreach.count < $aggregateFunctions.size())
	#set($seriesString = "$seriesString, ")
  #end
#end
#set($success = $series.add($seriesString))
## Set chart sizing
#set($height = 200)
#if($dateAxis)
  #set($xAxisMargin = 70)
#else
  #set($xAxisMargin = 20 + ($maxXAxisChars * 7) - $maxXAxisChars)
  #if($xAxisCategories.size() > 10)
    #set($height = $xAxisCategories.size() * 20)
  #end
#end
#if($aggregateFunctions.size() > 1)
  #set($height = $height * ($aggregateFunctions.size() * 0.8))
#end
#if(($aggregateFunctions.size() > 0) || ($groupings.size() > 0))
  #if($pieChart)
    #set($xAxisMargin = 10)
	  #set($legendWidth = ($maxLegendChars * 7))
	  #set($height = 150)
	  ##set($pieMidX = $height / 2)
	  ##set($pieMidY = $pieMidX)
  #end
  #if(!$dateAxis && !$pieChart)
    #if($chartRows.size() > 2)
      #set($height = $height * 2)
    #end
  #end
  #if($chart.equals($report.getChart())) ## if default chart in pane 3
	  #set($margin = "[10, 50, 60, $xAxisMargin]") ## top, right, bottom, left
	  #set($title = "")
  #else ## named chart in pane 3
    #set($margin = "[50, 50, 60, $xAxisMargin]")
    #set($height = $height + 40)
    #set($title = $chart.getTitle())
  #end
  #set($subtitle = "")
  #set($export_filename = $viewTools.cleanString($title))
  #set($export_filename = "agilebase_$export_filename")
  <script language="JavaScript">
	Highcharts.setOptions({
	  chart: {
	    style: {
	      fontFamily: 'Verdana, sans-serif'
	    }
	  }
	});
    var $chart_id = new Highcharts.Chart({
      chart: {
        renderTo: "$chart_id",
			#if($dateAxis)
        #if($scatter)
          #if($columnDisplay)
            defaultSeriesType: 'column',
          #else
            defaultSeriesType: 'scatter',
          #end
        #elseif($timeline || ($aggregateFunctions.size() > 1))
          #if($columnDisplay)
            defaultSeriesType: 'column',
          #else
            defaultSeriesType: 'line',
          #end
        #else
          #if($columnDisplay)
            defaultSeriesType: 'column',
          #else
            defaultSeriesType: 'area',
          #end
        #end
        zoomType: 'x',
			#elseif($pieChart)
			  defaultSeriesType: 'pie',
			#else
        defaultSeriesType: 'bar',
			#end
			height: $height ##,
			##margin: $margin
     },
		 credits: {
		 	enabled: false
		 },
		 #if($title != "")
		   title: {
		     text: "$title",
         #if($timeline)
           floating: true,
         #end
			   style: { textTransform: 'capitalize' }
		   },
		   #if($subtitle != "")
		     subtitle: {
			   text: "$subtitle",
			   style: { textTransform: 'lowercase', color: '#656766' }
			 },
		   #end
		 #else
           title: {
             style: {
			   margin: '0px',
			   height: '0px',
			   display: 'none',
			   color: '#656766'
			 }
           },
		 #end
		 #if(!$pieChart)
           xAxis: {
		     #if($dateAxis)
               type: 'datetime',
			   maxZoom: 60 * 24 * 3600000 // two months
			   #if($dateFormat.equals("%Y"))
			     ,dateTimeLabelFormats: {
                	day: '%Y',
                	week: '%Y',
                	month: '%Y',
                	year: '%Y'
                 }
                 #if($columnDisplay)
                   ,tickInterval: 86400000 * 364
                 #end
               #elseif($dateFormat.equals("%B %Y") && $columnDisplay)
                 ,tickInterval: 86400000 * 31
			   #end
		     #else
               categories: $xAxisCategories
		     #end
           },
           yAxis: {
              title: {
                 text: null
              }
           },
		 #end
		 legend: {
      #if($timeline)
        enabled: false
      #else
		 	  style: {
##		      position: 'absolute',
			  textTransform: 'lowercase',
		      #if($pieChart)
			    layout: 'vertical'
##				top: '40px',
##				left: '60%',
##				width: '100px'
			  #else
				zIndex: 10
##				bottom: '10px',
##				left: '120px',
##				padding: '5px'
			  #end
			}
      #end
		 },
		 tooltip: {
		   #if($dateAxis)
		   formatter: function() {
				return '<b>'+ this.series.name.replace(/\=.*$/,'') +'</b><br/>'+ 
					Highcharts.dateFormat('$dateFormat', this.x) + ': ' + this.y;
		   }
		   #elseif($pieChart)
		   formatter: function() {
				return this.series.name.replace(/\=.*$/,'') + ' = ' + this.y;
		   }
		   #else
		   formatter: function() {
				return '<b>'+ this.series.name.replace(/\=.*$/,'') +'</b><br/>'+
					this.x +': '+ this.y;
		   }
		   #end
		 },
		 plotOptions: {
		   #if($pieChart)
		     pie: {
			   showInLegend: true,
			   dataLabels: {
			     enabled: true,
				 distance: -15,
				 color: 'white',
				 formatter: function() {
				   if (this.y > ($grandTotal / 20)) {
				     return this.y;
				   } else {
				     return '';
				   }
				 }
			   },
			   animation: false,
			   size: '100%'
			 }
		   #elseif($dateAxis)
			   area: {
			     animation: false,
			   }
		   #else
		       bar: {
			     animation: false,
			   }
		   #end
		 },
		 exporting: {
            buttons: {
                exportButton: {
      				menuItems: [{
                        text: 'Download an image to share',
                        onclick: function() {
                            this.exportChart({
                    			url: 'http://www.agilebase.co.uk/static_features/highcharts_export/index.php',
                    			filename: '$export_filename',
                    			type: 'image/png',
                    			width: 1024
                            });
                        }
                    }, {
                        text: 'Download a PDF doc to print',
                        onclick: function() {
                            this.exportChart({
                    			url: 'http://www.agilebase.co.uk/static_features/highcharts_export/index.php',
                    			filename: '$export_filename',
                    			type: 'application/pdf'
							});
                        }
                    },
                    null, 
                    null
                    ]
				},
                printButton: {
                    enabled: false
                }
    		},
		 },
         series: $series
    });
    if (typeof abCharts != "object") {
      var abCharts = new Array();
    }
    abCharts.push(${chart_id});
  </script>
#end ## end javascript
#end
